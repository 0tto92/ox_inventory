name: Pre-Release

on: 
  workflow_dispatch:

jobs:
  create-release:
    name: Build and Create Tagged Pre release
    runs-on: ubuntu-latest

    steps:
      - name: Install archive tools
        run: sudo apt install zip

      - name: Checkout source code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
          
      - name: Get variables
        id: get_vars
        run: |
          echo "::set-output name=SHORT_SHA::$(git rev-parse --short HEAD)"
          echo "::set-output name=DATE::$(date +'%D')"

      - name: Yarn cache
        uses: actions/setup-node@v2
        with:
          node-version: "16"
          cache: "yarn"
          cache-dependency-path: "web/yarn.lock"

      - name: Install dependencies
        run: yarn --frozen-lockfile
        working-directory: web

      - name: Run build
        run: yarn build
        working-directory: web
        env:
          CI: false

      - name: Bundle files
        run: |
          mkdir -p ./temp/ox_inventory
          mkdir -p ./temp/ox_inventory/web
          cp ./{server.lua,README.md,LICENSE,fxmanifest.lua,config.lua,client.lua} ./temp/ox_inventory
          cp -r ./{setup,modules,data} ./temp/ox_inventory
          cp -r ./web/build ./temp/ox_inventory/web/build
          cd ./temp && zip -r ox_inventory-${{ steps.get_vars.outputs.SHORT_SHA }}.zip ./ox_inventory

      - name: Create Release
        uses: "marvinpinto/action-automatic-releases@v1.2.1"
        id: auto_release
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          title: "Experimental Build (${{ steps.get_vars.outputs.SHORT_SHA }}) | ${{ steps.get_vars.outputs.DATE }}"
          prerelease: true
          automatic_release_tag: "experimental"
          files: ./temp/ox_inventory-${{ steps.get_vars.outputs.SHORT_SHA }}.zip

        env:
          CI: false
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Sentry CLI
        run: |
          curl -sL https://sentry.io/get-cli/ | bash
          export SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          export SENTRY_ORG=${{ secrets.SENTRY_ORG }}
          export SENTRY_PROJECT=${{ secrets.SENTRY_PROJECT }}
          export SENTRY_URL=${{ secrets.SENTRY_URL }}
          export VERSION=${{ steps.get_vars.outputs.SHORT_SHA }}

          sentry-cli releases new "$VERSION"
          sentry-cli releases set-commits "$VERSION" --local --ignore-missing
          sentry-cli releases files "$VERSION" upload-sourcemaps ./temp/ox_inventory/web/build/static/js

          sentry-cli releases finalize "$VERSION"

#       - name: Create Sentry release
#         uses: tclindner/sentry-releases-action@v1.2.0
#         env:
#           SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#           SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
#           SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
#           SENTRY_URL: ${{ secrets.SENTRY_URL }}
#         with:
#           environment: production
#           tagName: ${{ steps.get_vars.outputs.SHORT_SHA }}
#           sourceMapOptions: '{"include": ["./temp/ox_inventory/web/builds/static/js"]}'
