{"version":3,"sources":["typings/inventory.ts","reducers/refreshSlots.ts","helpers/index.ts","store/inventory.ts","reducers/stackSlots.ts","reducers/swapSlots.ts","reducers/setupInventory.ts","reducers/moveSlots.ts","store/index.ts","utils/misc.ts","hooks/useNuiEvent.ts","components/utils/DragPreview.tsx","components/utils/Notifications.tsx","utils/fetchNui.ts","components/utils/ProgressBar.tsx","hooks/useKeyPress.ts","store/items.ts","components/utils/Fade.tsx","components/utils/WeightBar.tsx","thunks/validateItems.ts","thunks/buyItem.ts","components/inventory/InventorySlot.tsx","dnd/onBuy.ts","dnd/onDrop.ts","components/inventory/InventoryGrid.tsx","components/inventory/InventoryControl.tsx","dnd/onUse.ts","dnd/onGive.ts","hooks/useExitListener.ts","components/inventory/index.tsx","components/App.tsx","index.tsx"],"names":["InventoryType","isSlotWithItem","slot","strict","undefined","name","weight","count","getTargetInventory","state","sourceType","targetType","sourceInventory","PLAYER","leftInventory","rightInventory","targetInventory","inventorySlice","createSlice","initialState","id","type","slots","maxWeight","items","itemAmount","shiftPressed","isBusy","reducers","stackSlots","action","payload","fromSlot","fromType","toSlot","toType","pieceWeight","SHOP","swapSlots","setupInventory","Array","from","_","index","Object","values","find","item","moveSlots","refreshSlots","isArray","filter","data","forEach","inventory","setItemAmount","setShiftPressed","extraReducers","builder","addMatcher","isPending","history","current","isFulfilled","isRejected","actions","selectLeftInventory","selectRightInventory","selectItemAmount","selectIsBusy","store","configureStore","reducer","inventoryReducer","useAppDispatch","useDispatch","useAppSelector","useSelector","isEnvBrowser","window","invokeNative","noop","useNuiEvent","handler","savedHandler","useRef","useEffect","eventListener","event","eventAction","addEventListener","removeEventListener","subtract","a","b","x","y","calculatePointerPosition","monitor","childRef","offset","getClientOffset","getBoundingClientRect","client","getInitialClientOffset","source","getInitialSourceClientOffset","calculateParentOffset","bb","middle","width","height","DragPreview","element","useDragLayer","getItem","currentOffset","isDragging","ref","className","style","transform","backgroundImage","process","Notify","toast","text","duration","position","backgroundColor","Notifications","toastOptions","color","borderRadius","padding","fetchNui","eventName","options","method","headers","body","JSON","stringify","resourceName","GetParentResourceName","fetch","resp","json","respFormatted","ProgressBar","useState","setDuration","isVisible","setVisible","isCancelled","setCancelled","setText","setTimeout","animationDuration","onAnimationEnd","useKeyPress","targetKey","React","keyPressed","setKeyPressed","downHandler","useCallback","key","upHandler","Items","water","close","label","stack","usable","burger","Fade","props","opacity","visible","transition","children","colorChannelMixer","colorChannelA","colorChannelB","amountToMix","colorMixer","rgbA","rgbB","r","g","COLORS","WeightBar","percent","durability","useMemo","visibility","validateMove","createAsyncThunk","rejectWithValue","response","buyItem","InventorySlot","setCurrentItem","useDrag","collect","canDrag","drag","useDrop","accept","isOver","drop","target","getState","sourceSlot","targetSlot","promise","dispatch","loading","success","error","onBuy","sourceData","Error","metadata","findAvailableSlot","Math","floor","canStack","onDrop","canDrop","onMouseEnter","onMouseLeave","border","toLocaleString","minimumFractionDigits","InventoryGrid","currentItem","reduce","totalWeight","map","borderBottom","InfoScreen","infoVisible","setInfoVisible","icon","faTimes","onClick","InventoryControl","use","give","margin","min","defaultValue","onChange","valueAsNumber","faInfoCircle","LISTENED_KEYS","Inventory","inventoryVisible","setInventoryVisible","visibleSetter","setterRef","keyHandler","e","includes","code","useExitListener","App","entries","ReactDOM","render","StrictMode","DndProvider","backend","TouchBackend","enableMouseEvents","document","getElementById"],"mappings":"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","file":"static/js/main.bda191ff.chunk.js","sourcesContent":["import { Slot } from './slot';\r\n\r\nexport enum InventoryType {\r\n  PLAYER = 'player',\r\n  SHOP = 'shop',\r\n}\r\n\r\nexport type Inventory = {\r\n  id: string;\r\n  type: string;\r\n  slots: number;\r\n  items: Slot[];\r\n  maxWeight?: number;\r\n  label?: string;\r\n};\r\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\r\nimport { State, Slot, InventoryType } from '../typings';\r\n\r\nexport const refreshSlotsReducer: CaseReducer<\r\n  State,\r\n  PayloadAction<\r\n    { item: Slot; inventory?: InventoryType }[] | { item: Slot; inventory?: InventoryType }\r\n  >\r\n> = (state, action) => {\r\n  if (!Array.isArray(action.payload)) action.payload = [action.payload];\r\n\r\n  Object.values(action.payload)\r\n    .filter((data) => !!data)\r\n    .forEach((data) => {\r\n      const targetInventory = data.inventory\r\n        ? data.inventory !== InventoryType.PLAYER\r\n          ? state.rightInventory\r\n          : state.leftInventory\r\n        : state.leftInventory;\r\n      targetInventory.items[data.item.slot - 1] = data.item;\r\n    });\r\n};\r\n","//import { Items } from \"../store/items\";\r\nimport { Inventory, State, Slot, SlotWithItem, InventoryType, ItemData } from '../typings';\r\n\r\nexport const isSlotWithItem = (slot: Slot, strict: boolean = false): slot is SlotWithItem =>\r\n  (slot.name !== undefined && slot.weight !== undefined) ||\r\n  (strict && slot.name !== undefined && slot.count !== undefined && slot.weight !== undefined);\r\n\r\nexport const canStack = (sourceSlot: Slot, targetSlot: Slot) =>\r\n  sourceSlot.name === targetSlot.name && sourceSlot.metadata === targetSlot.metadata;\r\n\r\nexport const findAvailableSlot = (item: Slot, data: ItemData, items: Slot[]) => {\r\n  if (!data.stack) return items.find((target) => target.name === undefined);\r\n\r\n  const stackableSlot = items.find(\r\n    (target) => target.name === item.name && target.metadata === item.metadata,\r\n  );\r\n\r\n  return stackableSlot || items.find((target) => target.name === undefined);\r\n};\r\n\r\nexport const getTargetInventory = (\r\n  state: State,\r\n  sourceType: Inventory['type'],\r\n  targetType?: Inventory['type'],\r\n): { sourceInventory: Inventory; targetInventory: Inventory } => ({\r\n  sourceInventory: sourceType === InventoryType.PLAYER ? state.leftInventory : state.rightInventory,\r\n  targetInventory: targetType\r\n    ? targetType === InventoryType.PLAYER\r\n      ? state.leftInventory\r\n      : state.rightInventory\r\n    : sourceType === InventoryType.PLAYER\r\n    ? state.rightInventory\r\n    : state.leftInventory,\r\n});\r\n","import {\r\n  createSlice,\r\n  current,\r\n  isFulfilled,\r\n  isPending,\r\n  isRejected,\r\n  PayloadAction,\r\n} from '@reduxjs/toolkit';\r\nimport type { RootState } from '.';\r\nimport { State } from '../typings';\r\nimport {\r\n  setupInventoryReducer,\r\n  refreshSlotsReducer,\r\n  stackSlotsReducer,\r\n  swapSlotsReducer,\r\n  moveSlotsReducer,\r\n} from '../reducers';\r\n\r\nconst initialState: State = {\r\n  leftInventory: {\r\n    id: '',\r\n    type: '',\r\n    slots: 0,\r\n    maxWeight: 0,\r\n    items: [],\r\n  },\r\n  rightInventory: {\r\n    id: '',\r\n    type: '',\r\n    slots: 0,\r\n    maxWeight: 0,\r\n    items: [],\r\n  },\r\n  itemAmount: 0,\r\n  shiftPressed: false,\r\n  isBusy: false,\r\n};\r\n\r\nexport const inventorySlice = createSlice({\r\n  name: 'inventory',\r\n  initialState,\r\n  reducers: {\r\n    stackSlots: stackSlotsReducer,\r\n    swapSlots: swapSlotsReducer,\r\n    setupInventory: setupInventoryReducer,\r\n    moveSlots: moveSlotsReducer,\r\n    refreshSlots: refreshSlotsReducer,\r\n    setItemAmount: (state, action: PayloadAction<number>) => {\r\n      state.itemAmount = action.payload;\r\n    },\r\n    setShiftPressed: (state, action: PayloadAction<boolean>) => {\r\n      state.shiftPressed = action.payload;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addMatcher(isPending, (state) => {\r\n      state.isBusy = true;\r\n\r\n      state.history = {\r\n        leftInventory: current(state.leftInventory),\r\n        rightInventory: current(state.rightInventory),\r\n      };\r\n    });\r\n    builder.addMatcher(isFulfilled, (state) => {\r\n      state.isBusy = false;\r\n    });\r\n    builder.addMatcher(isRejected, (state) => {\r\n      if (state.history && state.history.leftInventory && state.history.rightInventory) {\r\n        state.leftInventory = state.history.leftInventory;\r\n        state.rightInventory = state.history.rightInventory;\r\n      }\r\n      state.isBusy = false;\r\n    });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setItemAmount,\r\n  setShiftPressed,\r\n  setupInventory,\r\n  swapSlots,\r\n  moveSlots,\r\n  stackSlots,\r\n  refreshSlots,\r\n} = inventorySlice.actions;\r\nexport const selectLeftInventory = (state: RootState) => state.inventory.leftInventory;\r\nexport const selectRightInventory = (state: RootState) => state.inventory.rightInventory;\r\nexport const selectItemAmount = (state: RootState) => state.inventory.itemAmount;\r\nexport const selectIsBusy = (state: RootState) => state.inventory.isBusy;\r\n\r\nexport default inventorySlice.reducer;\r\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\r\nimport { getTargetInventory } from '../helpers';\r\nimport { Inventory, State, SlotWithItem, InventoryType } from '../typings';\r\n\r\nexport const stackSlotsReducer: CaseReducer<\r\n  State,\r\n  PayloadAction<{\r\n    fromSlot: SlotWithItem;\r\n    fromType: Inventory['type'];\r\n    toSlot: SlotWithItem;\r\n    toType: Inventory['type'];\r\n    count: number;\r\n  }>\r\n> = (state, action) => {\r\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\r\n\r\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\r\n\r\n  const pieceWeight = fromSlot.weight / fromSlot.count;\r\n\r\n  targetInventory.items[toSlot.slot - 1] = {\r\n    ...targetInventory.items[toSlot.slot - 1],\r\n    count: toSlot.count + count,\r\n    weight: pieceWeight * (toSlot.count + count),\r\n  };\r\n\r\n  if (fromType === InventoryType.SHOP) return;\r\n\r\n  sourceInventory.items[fromSlot.slot - 1] =\r\n    fromSlot.count - count > 0\r\n      ? {\r\n          ...sourceInventory.items[fromSlot.slot - 1],\r\n          count: fromSlot.count - count,\r\n          weight: pieceWeight * (fromSlot.count - count),\r\n        }\r\n      : {\r\n          slot: fromSlot.slot,\r\n        };\r\n};\r\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\r\nimport { getTargetInventory } from '../helpers';\r\nimport { Inventory, State, SlotWithItem } from '../typings';\r\n\r\nexport const swapSlotsReducer: CaseReducer<\r\n  State,\r\n  PayloadAction<{\r\n    fromSlot: SlotWithItem;\r\n    fromType: Inventory['type'];\r\n    toSlot: SlotWithItem;\r\n    toType: Inventory['type'];\r\n  }>\r\n> = (state, action) => {\r\n  const { fromSlot, fromType, toSlot, toType } = action.payload;\r\n\r\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\r\n\r\n  [sourceInventory.items[fromSlot.slot - 1], targetInventory.items[toSlot.slot - 1]] = [\r\n    {\r\n      ...targetInventory.items[toSlot.slot - 1],\r\n      slot: fromSlot.slot,\r\n    },\r\n    {\r\n      ...sourceInventory.items[fromSlot.slot - 1],\r\n      slot: toSlot.slot,\r\n    },\r\n  ];\r\n};\r\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\r\nimport { Inventory, State } from '../typings';\r\n\r\nexport const setupInventoryReducer: CaseReducer<\r\n  State,\r\n  PayloadAction<{\r\n    leftInventory?: Inventory;\r\n    rightInventory?: Inventory;\r\n  }>\r\n> = (state, action) => {\r\n  const { leftInventory, rightInventory } = action.payload;\r\n\r\n  if (leftInventory)\r\n    state.leftInventory = {\r\n      ...leftInventory,\r\n      items: Array.from(\r\n        Array(leftInventory.slots),\r\n        (_, index) =>\r\n          Object.values(leftInventory.items).find((item) => item?.slot === index + 1) || {\r\n            slot: index + 1,\r\n          },\r\n      ),\r\n    };\r\n\r\n  if (rightInventory)\r\n    state.rightInventory = {\r\n      ...rightInventory,\r\n      items: Array.from(\r\n        Array(rightInventory.slots),\r\n        (_, index) =>\r\n          Object.values(rightInventory.items).find((item) => item?.slot === index + 1) || {\r\n            slot: index + 1,\r\n          },\r\n      ),\r\n    };\r\n};\r\n","import { CaseReducer, PayloadAction } from '@reduxjs/toolkit';\r\nimport { getTargetInventory } from '../helpers';\r\nimport { Inventory, State, SlotWithItem, Slot, InventoryType } from '../typings';\r\n\r\nexport const moveSlotsReducer: CaseReducer<\r\n  State,\r\n  PayloadAction<{\r\n    fromSlot: SlotWithItem;\r\n    fromType: Inventory['type'];\r\n    toSlot: Slot;\r\n    toType: Inventory['type'];\r\n    count: number;\r\n  }>\r\n> = (state, action) => {\r\n  const { fromSlot, fromType, toSlot, toType, count } = action.payload;\r\n\r\n  const { sourceInventory, targetInventory } = getTargetInventory(state, fromType, toType);\r\n\r\n  const pieceWeight = fromSlot.weight / fromSlot.count;\r\n\r\n  targetInventory.items[toSlot.slot - 1] = {\r\n    ...sourceInventory.items[fromSlot.slot - 1],\r\n    count: count,\r\n    weight: pieceWeight * count,\r\n    slot: toSlot.slot,\r\n  };\r\n\r\n  if (fromType === InventoryType.SHOP) return;\r\n\r\n  sourceInventory.items[fromSlot.slot - 1] =\r\n    fromSlot.count - count > 0\r\n      ? {\r\n          ...sourceInventory.items[fromSlot.slot - 1],\r\n          count: fromSlot.count - count,\r\n          weight: pieceWeight * (fromSlot.count - count),\r\n        }\r\n      : {\r\n          slot: fromSlot.slot,\r\n        };\r\n};\r\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\r\nimport inventoryReducer from './inventory';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    inventory: inventoryReducer,\r\n  },\r\n});\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n  ReturnType,\r\n  RootState,\r\n  unknown,\r\n  Action<string>\r\n>;\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","// Will return whether the current environment is in a regular browser\r\n// and not CEF\r\nexport const isEnvBrowser = (): boolean => !(window as any).invokeNative;\r\n\r\n// Basic no operation function\r\nexport const noop = () => {};\r\n","import { MutableRefObject, useEffect, useRef } from 'react';\r\nimport { noop } from '../utils/misc';\r\n\r\ninterface NuiMessageData<T = unknown> {\r\n  action: string;\r\n  data: T;\r\n}\r\n\r\ntype NuiHandlerSignature<T> = (data: T) => void;\r\n\r\n/**\r\n * A hook that manage events listeners for receiving data from the client scripts\r\n * @param action The specific `action` that should be listened for.\r\n * @param handler The callback function that will handle data relayed by this hook\r\n *\r\n * @example\r\n * useNuiEvent<{visibility: true, wasVisible: 'something'}>('setVisible', (data) => {\r\n *   // whatever logic you want\r\n * })\r\n *\r\n **/\r\n\r\nexport const useNuiEvent = <T = any>(action: string, handler: (data: T) => void) => {\r\n  const savedHandler: MutableRefObject<NuiHandlerSignature<T>> = useRef(noop);\r\n\r\n  // When handler value changes set mutable ref to handler val\r\n  useEffect(() => {\r\n    savedHandler.current = handler;\r\n  }, [handler]);\r\n\r\n  useEffect(() => {\r\n    const eventListener = (event: MessageEvent<NuiMessageData<T>>) => {\r\n      const { action: eventAction, data } = event.data;\r\n\r\n      if (savedHandler.current) {\r\n        if (eventAction === action) {\r\n          savedHandler.current(data);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('message', eventListener);\r\n    // Remove Event Listener on component cleanup\r\n    return () => window.removeEventListener('message', eventListener);\r\n  }, [action]);\r\n};\r\n\r\nexport default useNuiEvent;\r\n","import React, { RefObject, useRef } from \"react\";\r\nimport { DragLayerMonitor, useDragLayer, XYCoord } from \"react-dnd\";\r\nimport { DragSource } from \"../../typings\";\r\n\r\ninterface DragLayerProps {\r\n  data: DragSource;\r\n  currentOffset: XYCoord | null;\r\n  isDragging: boolean;\r\n}\r\n\r\nconst subtract = (a: XYCoord, b: XYCoord): XYCoord => {\r\n  return {\r\n    x: a.x - b.x,\r\n    y: a.y - b.y,\r\n  };\r\n};\r\n\r\nconst calculateParentOffset = (monitor: DragLayerMonitor): XYCoord => {\r\n  const client = monitor.getInitialClientOffset();\r\n  const source = monitor.getInitialSourceClientOffset();\r\n  if (\r\n    client === null ||\r\n    source === null ||\r\n    client.x === undefined ||\r\n    client.y === undefined\r\n  ) {\r\n    return { x: 0, y: 0 };\r\n  }\r\n  return subtract(client, source);\r\n};\r\n\r\nexport const calculatePointerPosition = (\r\n  monitor: DragLayerMonitor,\r\n  childRef: RefObject<Element>\r\n): XYCoord | null => {\r\n  const offset = monitor.getClientOffset();\r\n  if (offset === null) {\r\n    return null;\r\n  }\r\n\r\n  if (!childRef.current || !childRef.current.getBoundingClientRect) {\r\n    return subtract(offset, calculateParentOffset(monitor));\r\n  }\r\n\r\n  const bb = childRef.current.getBoundingClientRect();\r\n  const middle = { x: bb.width / 2, y: bb.height / 2 };\r\n  return subtract(offset, middle);\r\n};\r\n\r\nconst DragPreview: React.FC = () => {\r\n  const element = useRef<HTMLDivElement>(null);\r\n  const { data, isDragging, currentOffset } = useDragLayer<DragLayerProps>(\r\n    (monitor) => ({\r\n      data: monitor.getItem(),\r\n      currentOffset: calculatePointerPosition(monitor, element),\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {isDragging && currentOffset && data.item && (\r\n        <div\r\n          ref={element}\r\n          className=\"drag\"\r\n          style={{\r\n            transform: `translate(${currentOffset.x}px, ${currentOffset.y}px)`,\r\n            backgroundImage: `url(${\r\n              process.env.PUBLIC_URL + `/images/${data.item.name}.png`\r\n            })`,\r\n          }}\r\n        ></div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DragPreview;\r\n","import React from \"react\";\r\nimport { useNuiEvent } from \"../../hooks/useNuiEvent\";\r\nimport { debugData } from \"../../utils/debugData\";\r\n\r\nimport toast, { Toaster, ToastPosition } from \"react-hot-toast\";\r\n\r\n// API - https://github.com/timolins/react-hot-toast\r\n\r\ndebugData([\r\n  {\r\n    action: \"showNotif\",\r\n    data: {\r\n      text: \"Info Notification\",\r\n    },\r\n  },\r\n]);\r\ndebugData([\r\n  {\r\n    action: \"showNotif\",\r\n    data: {\r\n      text: \"Success Notification\",\r\n      type: \"success\",\r\n    },\r\n  },\r\n]);\r\ndebugData([\r\n  {\r\n    action: \"showNotif\",\r\n    data: {\r\n      text: \"Error Notification\",\r\n      type: \"error\",\r\n    },\r\n  },\r\n]);\r\n\r\ninterface NotificationProps {\r\n  text: string;\r\n  type?: string;\r\n  position?: ToastPosition;\r\n  duration?: number;\r\n}\r\n\r\nconst Notify = (data: NotificationProps) => {\r\n  toast(data.text, {\r\n    duration: data.duration || 4000,\r\n    position: data.position || \"top-center\",\r\n    style: {\r\n      backgroundColor:\r\n        data.type === undefined\r\n          ? \"rgb(52, 152, 219)\"\r\n          : data.type === \"success\"\r\n          ? \"rgb(39, 174, 96)\"\r\n          : \"rgb(231, 76, 60)\",\r\n    },\r\n  });\r\n};\r\n\r\nconst Notifications: React.FC = () => {\r\n  useNuiEvent<NotificationProps>(\"showNotif\", (data) => {\r\n    Notify(data);\r\n  });\r\n\r\n  return (\r\n    <Toaster\r\n      toastOptions={{\r\n        // options defined here apply to all toasts\r\n        style: {\r\n          color: \"white\",\r\n          borderRadius: \"5px\",\r\n          padding: \"4px\",\r\n        },\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\nexport { Notify };\r\n","/**\r\n * Simple wrapper around fetch API tailored for CEF/NUI use. This abstraction\r\n * can be extended to include AbortController if needed or if the response isn't\r\n * JSON. Tailor it to your needs.\r\n *\r\n * @param eventName - The endpoint eventname to target\r\n * @param data - Data you wish to send in the NUI Callback\r\n *\r\n * @return returnData - A promise for the data sent back by the NuiCallbacks CB argument\r\n */\r\n\r\nexport async function fetchNui<T = any>(eventName: string, data?: any): Promise<T> {\r\n  const options = {\r\n    method: 'post',\r\n    headers: {\r\n      'Content-Type': 'application/json; charset=UTF-8',\r\n    },\r\n    body: JSON.stringify(data),\r\n  };\r\n\r\n  const resourceName = (window as any).GetParentResourceName\r\n    ? (window as any).GetParentResourceName()\r\n    : 'nui-frame-app';\r\n\r\n  const resp = await fetch(`https://${resourceName}/${eventName}`, options);\r\n\r\n  const respFormatted = await resp.json();\r\n\r\n  return respFormatted;\r\n}\r\n","import { useState } from \"react\";\r\nimport useNuiEvent from \"../../hooks/useNuiEvent\";\r\nimport { debugData } from \"../../utils/debugData\";\r\nimport { fetchNui } from \"../../utils/fetchNui\";\r\n\r\ndebugData([\r\n  {\r\n    action: \"startProgress\",\r\n    data: {\r\n      text: \"Using Water\",\r\n      duration: 5000,\r\n    },\r\n  },\r\n]);\r\n\r\n//TODO: maybe refactor depends on lua side\r\n\r\nconst ProgressBar: React.FC = () => {\r\n  const [duration, setDuration] = useState(0);\r\n  const [isVisible, setVisible] = useState(false);\r\n  const [isCancelled, setCancelled] = useState(false);\r\n  const [text, setText] = useState(\"\");\r\n\r\n  useNuiEvent<{ text: string; duration: number }>(\"startProgress\", (data) => {\r\n    setText(data.text);\r\n    setDuration(data.duration);\r\n    setVisible(true);\r\n    setCancelled(false)\r\n  });\r\n\r\n  useNuiEvent(\"cancelProgress\", () => {\r\n    setCancelled(true);\r\n    setTimeout(() => setVisible(false), 1750);\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {isVisible && (\r\n        <div className=\"progressBar\">\r\n          <div\r\n            className={isCancelled ? \"progressBar-cancel\" : \"progressBar-value\"}\r\n            style={{ animationDuration: `${duration}ms` }}\r\n            onAnimationEnd={() => {setVisible(false); fetchNui('ox_inventory:ProgressComplete')}}\r\n          >\r\n            <span>{text}</span>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import React from 'react';\r\n\r\nexport const useKeyPress = (targetKey: KeyboardEvent['key']) => {\r\n  const [keyPressed, setKeyPressed] = React.useState(false);\r\n\r\n  const downHandler = React.useCallback(\r\n    ({ key }: KeyboardEvent) => {\r\n      if (key === targetKey) {\r\n        setKeyPressed(true);\r\n      }\r\n    },\r\n    [targetKey],\r\n  );\r\n\r\n  const upHandler = React.useCallback(\r\n    ({ key }: KeyboardEvent) => {\r\n      if (key === targetKey) {\r\n        setKeyPressed(false);\r\n      }\r\n    },\r\n    [targetKey],\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    window.addEventListener('keydown', downHandler);\r\n    window.addEventListener('keyup', upHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('keydown', downHandler);\r\n      window.removeEventListener('keyup', upHandler);\r\n    };\r\n  }, [downHandler, upHandler]);\r\n\r\n  return keyPressed;\r\n};\r\n\r\nexport default useKeyPress;\r\n","import { ItemData } from '../typings/item';\r\n\r\nexport const Items: {\r\n  [key: string]: ItemData | undefined;\r\n} = {\r\n  water: {\r\n    close: false,\r\n    label: 'VODA',\r\n    stack: true,\r\n    usable: true,\r\n  },\r\n  burger: {\r\n    close: false,\r\n    label: 'BURGR',\r\n    stack: false,\r\n    usable: false,\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nconst Fade: React.FC<{ visible: boolean; duration?: number, className?: string }> = (props) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        opacity: props.visible ? 1 : 0,\r\n        transition: `opacity ${props.duration || 0.2}s ease-out`,\r\n      }}\r\n      className={props.className}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Fade;\r\n","import React from \"react\";\r\n\r\nconst colorChannelMixer = (\r\n  colorChannelA: number,\r\n  colorChannelB: number,\r\n  amountToMix: number\r\n) => {\r\n  let channelA = colorChannelA * amountToMix;\r\n  let channelB = colorChannelB * (1 - amountToMix);\r\n  return channelA + channelB;\r\n};\r\n\r\nconst colorMixer = (rgbA: number[], rgbB: number[], amountToMix: number) => {\r\n  let r = colorChannelMixer(rgbA[0], rgbB[0], amountToMix);\r\n  let g = colorChannelMixer(rgbA[1], rgbB[1], amountToMix);\r\n  let b = colorChannelMixer(rgbA[2], rgbB[2], amountToMix);\r\n  return `rgb(${r}, ${g}, ${b})`;\r\n};\r\n\r\nconst COLORS = {\r\n  // Colors used - https://materialui.co/flatuicolors\r\n  primaryColor: [231, 76, 60], // Red (Pomegranate)\r\n  secondColor: [39, 174, 96], // Green (Nephritis)\r\n  accentColor: [211, 84, 0], // Orange (Oragne)\r\n};\r\n\r\nconst WeightBar: React.FC<{ percent: number; durability?: boolean }> = ({\r\n  percent,\r\n  durability,\r\n}) => {\r\n  const color = React.useMemo(\r\n    () =>\r\n      durability\r\n        ? percent < 50\r\n          ? colorMixer(COLORS.accentColor, COLORS.primaryColor, percent / 100)\r\n          : colorMixer(COLORS.secondColor, COLORS.accentColor, percent / 100)\r\n        : percent > 50\r\n        ? colorMixer(COLORS.primaryColor, COLORS.accentColor, percent / 100)\r\n        : colorMixer(COLORS.accentColor, COLORS.secondColor, percent / 50),\r\n    [durability, percent]\r\n  );\r\n\r\n  return (\r\n    <div className={durability ? \"item-durability\" : \"weight-bar\"}>\r\n      <div\r\n        style={{\r\n          visibility: percent > 0 ? \"visible\" : \"hidden\",\r\n          width: `${percent}%`,\r\n          backgroundColor: color,\r\n          transition: `background ${0.3}s ease, width ${0.3}s ease`,\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\nexport default WeightBar;\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchNui } from '../utils/fetchNui';\r\n\r\nexport const validateMove = createAsyncThunk(\r\n  'inventory/validateMove',\r\n  async (\r\n    data: {\r\n      fromSlot: number;\r\n      fromType: string;\r\n      toSlot: number;\r\n      toType: string;\r\n      count: number;\r\n    },\r\n    { rejectWithValue },\r\n  ) => {\r\n    try {\r\n      const response = await fetchNui<boolean>('swapItems', data);\r\n\r\n      if (response === false) {\r\n        rejectWithValue(response);\r\n      }\r\n    } catch (error) {\r\n      rejectWithValue(false);\r\n    }\r\n  },\r\n);\r\n","import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport { fetchNui } from '../utils/fetchNui';\r\n\r\nexport const buyItem = createAsyncThunk(\r\n  'inventory/buyItem',\r\n  async (\r\n    data: {\r\n      fromSlot: number;\r\n      fromType: string;\r\n      toSlot: number;\r\n      toType: string;\r\n      count: number;\r\n    },\r\n    { rejectWithValue },\r\n  ) => {\r\n    try {\r\n      const response = await fetchNui<boolean>('buyItem', data);\r\n\r\n      if (response === false) {\r\n        rejectWithValue(response);\r\n      }\r\n    } catch (error) {\r\n      rejectWithValue(false);\r\n    }\r\n  },\r\n);\r\n","import React from 'react';\r\nimport { DragSource, Inventory, InventoryType, Slot, SlotWithItem } from '../../typings';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { useAppSelector } from '../../store';\r\nimport WeightBar from '../utils/WeightBar';\r\nimport { onDrop } from '../../dnd/onDrop';\r\nimport { onBuy } from '../../dnd/onBuy';\r\nimport { selectIsBusy } from '../../store/inventory';\r\nimport { Items } from '../../store/items';\r\nimport { isSlotWithItem } from '../../helpers';\r\n\r\ninterface SlotProps {\r\n  inventory: Inventory;\r\n  item: Slot;\r\n  setCurrentItem: React.Dispatch<React.SetStateAction<SlotWithItem | undefined>>;\r\n}\r\n\r\nconst InventorySlot: React.FC<SlotProps> = ({ inventory, item, setCurrentItem }) => {\r\n  const isBusy = useAppSelector(selectIsBusy);\r\n\r\n  const [{ isDragging }, drag] = useDrag<DragSource, void, { isDragging: boolean }>(\r\n    () => ({\r\n      type: 'SLOT',\r\n      collect: (monitor) => ({\r\n        isDragging: monitor.isDragging(),\r\n      }),\r\n      item: () =>\r\n        isSlotWithItem(item, inventory.type !== InventoryType.SHOP)\r\n          ? {\r\n              inventory: inventory.type,\r\n              item: {\r\n                name: item.name,\r\n                slot: item.slot,\r\n              },\r\n            }\r\n          : null,\r\n      canDrag: !isBusy,\r\n    }),\r\n    [isBusy, inventory, item],\r\n  );\r\n\r\n  const [{ isOver }, drop] = useDrop<DragSource, void, { isOver: boolean }>(\r\n    () => ({\r\n      accept: 'SLOT',\r\n      collect: (monitor) => ({\r\n        isOver: monitor.isOver(),\r\n      }),\r\n      drop: (source) =>\r\n        source.inventory === InventoryType.SHOP\r\n          ? onBuy(source, {\r\n              inventory: inventory.type,\r\n              item: {\r\n                slot: item.slot,\r\n              },\r\n            })\r\n          : onDrop(source, {\r\n              inventory: inventory.type,\r\n              item: {\r\n                slot: item.slot,\r\n              },\r\n            }),\r\n      canDrop: (source) =>\r\n        !isBusy &&\r\n        (source.item.slot !== item.slot || source.inventory !== inventory.type) &&\r\n        inventory.type !== InventoryType.SHOP,\r\n    }),\r\n    [isBusy, inventory, item],\r\n  );\r\n\r\n  const connectRef = (element: HTMLDivElement) => drag(drop(element));\r\n\r\n  const onMouseEnter = React.useCallback(\r\n    () => isSlotWithItem(item) && setCurrentItem(item),\r\n    [item, setCurrentItem],\r\n  );\r\n\r\n  const onMouseLeave = React.useCallback(\r\n    () => isSlotWithItem(item) && setCurrentItem(undefined),\r\n    [item, setCurrentItem],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        ref={connectRef}\r\n        className=\"item-container\"\r\n        style={{\r\n          opacity: isDragging ? 0.4 : 1.0,\r\n          backgroundImage: `url(${process.env.PUBLIC_URL + `/images/${item.name}.png`})` || 'none',\r\n          border: isOver ? '0.1vh dashed rgba(255,255,255,0.5)' : '0.1vh inset rgba(0,0,0,0)',\r\n        }}\r\n        onMouseEnter={onMouseEnter}\r\n        onMouseLeave={onMouseLeave}\r\n      >\r\n        {isSlotWithItem(item) && (\r\n          <>\r\n            <div className=\"item-count\">\r\n              <span>\r\n                {item.weight >= 1000\r\n                  ? `${(item.weight / 1000).toLocaleString('en-us', {\r\n                      minimumFractionDigits: 2,\r\n                    })}kg`\r\n                  : `${item.weight.toLocaleString('en-us', {\r\n                      minimumFractionDigits: 0,\r\n                    })}g`}{' '}\r\n                {item.count?.toLocaleString('en-us')}x\r\n              </span>\r\n            </div>\r\n            {item.metadata?.durability && (\r\n              <WeightBar percent={item.metadata.durability} durability />\r\n            )}\r\n            <div className=\"item-label\">\r\n              [{item.slot}] {Items[item.name]?.label || 'NO LABEL'}\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventorySlot;\r\n","import { isSlotWithItem, findAvailableSlot, getTargetInventory, canStack } from '../helpers';\r\nimport { validateMove } from '../thunks/validateItems';\r\nimport { store } from '../store';\r\nimport { DragSource, DropTarget, InventoryType, SlotWithItem } from '../typings';\r\nimport { moveSlots, stackSlots, swapSlots } from '../store/inventory';\r\nimport toast from 'react-hot-toast';\r\nimport { Items } from '../store/items';\r\nimport { buyItem } from '../thunks/buyItem';\r\nimport { isEnvBrowser } from '../utils/misc';\r\n\r\nexport const onBuy = (source: DragSource, target: DropTarget) => {\r\n  const { inventory: state } = store.getState();\r\n\r\n  const sourceInventory = state.rightInventory;\r\n  const targetInventory = state.leftInventory;\r\n\r\n  const sourceSlot = sourceInventory.items[source.item.slot - 1];\r\n\r\n  if (!isSlotWithItem(sourceSlot)) {\r\n    toast.error(`Item ${sourceSlot.slot} name === undefined`);\r\n    return;\r\n  }\r\n\r\n  if (sourceSlot.count === 0) {\r\n    toast.error('Out of stock');\r\n    return;\r\n  }\r\n\r\n  const sourceData = Items[sourceSlot.name];\r\n\r\n  if (sourceData === undefined) {\r\n    toast.error(`Item ${sourceSlot.name} data undefined!`);\r\n    return;\r\n  }\r\n\r\n  const targetSlot = targetInventory.items[target.item.slot - 1];\r\n\r\n  if (targetSlot === undefined) {\r\n    toast.error(`Target slot undefined`);\r\n    return;\r\n  }\r\n\r\n  const count =\r\n    state.itemAmount !== 0\r\n      ? sourceSlot.count\r\n        ? state.itemAmount > sourceSlot.count\r\n          ? sourceSlot.count\r\n          : state.itemAmount\r\n        : state.itemAmount\r\n      : 1;\r\n\r\n  const data = {\r\n    fromSlot: sourceSlot,\r\n    toSlot: targetSlot,\r\n    fromType: sourceInventory.type,\r\n    toType: targetInventory.type,\r\n    count: count,\r\n  };\r\n\r\n  if (!isEnvBrowser()) {\r\n    const promise = store.dispatch(\r\n      buyItem({\r\n        ...data,\r\n        fromSlot: sourceSlot.slot,\r\n        toSlot: targetSlot.slot,\r\n      }),\r\n    );\r\n\r\n    toast.promise(promise, {\r\n      loading: 'VALIDATING SHOP',\r\n      success: 'VALIDATED',\r\n      error: 'ERROR',\r\n    });\r\n  }\r\n};\r\n","import { isSlotWithItem, findAvailableSlot, getTargetInventory, canStack } from '../helpers';\r\nimport { validateMove } from '../thunks/validateItems';\r\nimport { store } from '../store';\r\nimport { DragSource, DropTarget, InventoryType, SlotWithItem } from '../typings';\r\nimport { moveSlots, stackSlots, swapSlots } from '../store/inventory';\r\nimport toast from 'react-hot-toast';\r\nimport { Items } from '../store/items';\r\nimport { buyItem } from '../thunks/buyItem';\r\nimport { isEnvBrowser } from '../utils/misc';\r\n\r\nexport const onDrop = (source: DragSource, target?: DropTarget) => {\r\n  const { inventory: state } = store.getState();\r\n\r\n  const { sourceInventory, targetInventory } = getTargetInventory(\r\n    state,\r\n    source.inventory,\r\n    target?.inventory,\r\n  );\r\n\r\n  const sourceSlot = sourceInventory.items[source.item.slot - 1] as SlotWithItem;\r\n\r\n  const sourceData = Items[sourceSlot.name];\r\n\r\n  if (sourceData === undefined) {\r\n    throw new Error(`${sourceSlot.name} item data undefined!`);\r\n  }\r\n\r\n  const targetSlot = target\r\n    ? targetInventory.items[target.item.slot - 1]\r\n    : findAvailableSlot(sourceSlot, sourceData, targetInventory.items);\r\n\r\n  if (targetSlot === undefined) {\r\n    throw new Error('Target slot undefined!');\r\n  }\r\n\r\n  const count =\r\n    state.shiftPressed && sourceSlot.count > 1\r\n      ? Math.floor(sourceSlot.count / 2)\r\n      : state.itemAmount === 0 || state.itemAmount > sourceSlot.count\r\n      ? sourceSlot.count\r\n      : state.itemAmount;\r\n\r\n  const data = {\r\n    fromSlot: sourceSlot,\r\n    toSlot: targetSlot,\r\n    fromType: sourceInventory.type,\r\n    toType: targetInventory.type,\r\n    count: count,\r\n  };\r\n\r\n  if (!isEnvBrowser()) {\r\n    const promise = store.dispatch(\r\n      validateMove({\r\n        ...data,\r\n        fromSlot: sourceSlot.slot,\r\n        toSlot: targetSlot.slot,\r\n      }),\r\n    );\r\n\r\n    toast.promise(promise, {\r\n      loading: 'VALIDATING',\r\n      success: 'VALIDATED',\r\n      error: 'ERROR',\r\n    });\r\n  }\r\n\r\n  isSlotWithItem(targetSlot, true)\r\n    ? sourceData.stack && canStack(sourceSlot, targetSlot)\r\n      ? store.dispatch(\r\n          stackSlots({\r\n            ...data,\r\n            toSlot: targetSlot,\r\n          }),\r\n        )\r\n      : store.dispatch(\r\n          swapSlots({\r\n            ...data,\r\n            toSlot: targetSlot,\r\n          }),\r\n        )\r\n    : store.dispatch(moveSlots(data));\r\n};\r\n","import React from \"react\";\r\nimport { Items } from \"../../store/items\";\r\nimport { Inventory, SlotWithItem } from \"../../typings\";\r\nimport Fade from \"../utils/Fade\";\r\nimport WeightBar from \"../utils/WeightBar\";\r\nimport InventorySlot from \"./InventorySlot\";\r\n\r\nconst InventoryGrid: React.FC<{ inventory: Inventory }> = ({ inventory }) => {\r\n  const [currentItem, setCurrentItem] = React.useState<SlotWithItem>();\r\n\r\n  const weight = React.useMemo(\r\n    () =>\r\n      inventory.maxWeight !== undefined\r\n        ? inventory.items.reduce<number>(\r\n            (totalWeight, slot) =>\r\n              slot.weight ? totalWeight + slot.weight : totalWeight,\r\n            0\r\n          )\r\n        : 0,\r\n    [inventory.maxWeight, inventory.items]\r\n  );\r\n\r\n  return (\r\n    <div className=\"column-wrapper\">\r\n      <div className=\"inventory-label\">\r\n        <p>\r\n          {inventory.label && `${inventory.label} -`}\r\n          {inventory.id}\r\n        </p>\r\n        {inventory.maxWeight && (\r\n          <div>\r\n            {weight / 1000}/{inventory.maxWeight / 1000}kg\r\n          </div>\r\n        )}\r\n      </div>\r\n      <WeightBar\r\n        percent={inventory.maxWeight ? (weight / inventory.maxWeight) * 100 : 0}\r\n      />\r\n      <div className=\"inventory-grid\">\r\n        {inventory.items.map((item) => (\r\n          <InventorySlot\r\n            key={`${inventory.type}-${inventory.id}-${item.slot}`}\r\n            item={item}\r\n            inventory={inventory}\r\n            setCurrentItem={setCurrentItem}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <Fade\r\n          visible={currentItem !== undefined}\r\n          duration={0.25}\r\n          className=\"item-info\"\r\n        >\r\n          {currentItem && (\r\n            <>\r\n              <p>{Items[currentItem.name]?.label || \"NO LABEL\"}</p>\r\n              <hr style={{ borderBottom: \"0.1vh\" }}></hr>\r\n            </>\r\n          )}\r\n        </Fade>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InventoryGrid;\r\n","import React, { useState } from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport { selectItemAmount, setItemAmount } from \"../../store/inventory\";\r\nimport { DragSource } from \"../../typings\";\r\nimport { onUse } from \"../../dnd/onUse\";\r\nimport { onGive } from \"../../dnd/onGive\";\r\nimport { fetchNui } from \"../../utils/fetchNui\";\r\nimport { faInfoCircle, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport Fade from \"../utils/Fade\";\r\nimport { Notify } from \"../utils/Notifications\";\r\n\r\nconst InfoScreen: React.FC<{\r\n  infoVisible: boolean;\r\n  setInfoVisible: React.Dispatch<React.SetStateAction<boolean>>;\r\n}> = ({ infoVisible, setInfoVisible }) => {\r\n  return (\r\n    <div\r\n      className=\"info-main\"\r\n      style={{ visibility: infoVisible ? \"visible\" : \"hidden\" }}\r\n    >\r\n      <FontAwesomeIcon\r\n        icon={faTimes}\r\n        onClick={() => setInfoVisible(false)}\r\n        className=\"info-exit-icon\"\r\n      />\r\n      <h2>Useful Controls</h2>\r\n      <p>[CTRL + LMB] - Fast move stack of items into another inventory</p>\r\n      <p>[SHIFT + Drag] - Split item quantity into half</p>\r\n      <p>\r\n        [CTRL + SHIFT + LMB] - Fast move half a stack of items into another\r\n        inventory\r\n      </p>\r\n      <p>[ALT + LMB] - Fast use item</p>\r\n      <span\r\n        className=\"info-ox\"\r\n        onClick={() =>\r\n          Notify({ text: \"Made with 🧡 by the overextended 🐂 team\" })\r\n        }\r\n      >\r\n        🐂\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InventoryControl: React.FC = () => {\r\n  const itemAmount = useAppSelector(selectItemAmount);\r\n  const dispatch = useAppDispatch();\r\n\r\n  const [infoVisible, setInfoVisible] = useState(false);\r\n\r\n  const [, use] = useDrop<DragSource, void, any>(() => ({\r\n    accept: \"SLOT\",\r\n    drop: (source) => onUse(source.item),\r\n  }));\r\n\r\n  const [, give] = useDrop<DragSource, void, any>(\r\n    () => ({\r\n      accept: \"SLOT\",\r\n      drop: (source) => onGive(source.item, itemAmount),\r\n    }),\r\n    [itemAmount]\r\n  );\r\n\r\n  const inputHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    dispatch(setItemAmount(event.target.valueAsNumber));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fade visible={infoVisible} duration={0.25} className=\"info-fade\">\r\n        <InfoScreen infoVisible={infoVisible} setInfoVisible={setInfoVisible} />\r\n      </Fade>\r\n      <div className=\"column-wrapper\" style={{ margin: \"1vh\" }}>\r\n        <input\r\n          type=\"number\"\r\n          className=\"button input\"\r\n          min={0}\r\n          defaultValue={itemAmount}\r\n          onChange={inputHandler}\r\n        />\r\n        <button ref={use} className=\"button\">\r\n          Use\r\n        </button>\r\n        <button ref={give} className=\"button\">\r\n          Give\r\n        </button>\r\n        <button className=\"button\" onClick={() => fetchNui(\"exit\")}>\r\n          Close\r\n        </button>\r\n        <div className=\"misc-btns\">\r\n          <button onClick={() => setInfoVisible(true)}>\r\n            <FontAwesomeIcon icon={faInfoCircle} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InventoryControl;\r\n","//import toast from \"react-hot-toast\";\r\nimport { fetchNui } from '../utils/fetchNui';\r\nimport { Slot } from '../typings';\r\n\r\nexport const onUse = (item: Slot) => {\r\n  //toast.success(`Use ${item.name}`);\r\n  fetchNui('useItem', item);\r\n};\r\n","import toast from 'react-hot-toast';\r\nimport { Slot } from '../typings';\r\n\r\nexport const onGive = (item: Slot, count: number) => {\r\n  toast.success(`Give ${item.name}`);\r\n};\r\n","import { useEffect, useRef } from 'react';\r\nimport { noop } from '../utils/misc';\r\nimport { fetchNui } from '../utils/fetchNui';\r\n\r\ntype FrameVisibleSetter = (bool: boolean) => void;\r\n\r\nconst LISTENED_KEYS = ['Escape'];\r\n\r\n// Basic hook to listen for key presses in NUI in order to exit\r\nexport const useExitListener = (visibleSetter: FrameVisibleSetter) => {\r\n  const setterRef = useRef<FrameVisibleSetter>(noop);\r\n\r\n  useEffect(() => {\r\n    setterRef.current = visibleSetter;\r\n  }, [visibleSetter]);\r\n\r\n  useEffect(() => {\r\n    const keyHandler = (e: KeyboardEvent) => {\r\n      if (LISTENED_KEYS.includes(e.code)) {\r\n        setterRef.current(false);\r\n        fetchNui('exit');\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keyup', keyHandler);\r\n\r\n    return () => window.removeEventListener('keyup', keyHandler);\r\n  }, []);\r\n};\r\n","import React from \"react\";\r\nimport useNuiEvent from \"../../hooks/useNuiEvent\";\r\nimport InventoryGrid from \"./InventoryGrid\";\r\nimport InventoryControl from \"./InventoryControl\";\r\nimport Fade from \"../utils/Fade\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store\";\r\nimport {\r\n  selectLeftInventory,\r\n  selectRightInventory,\r\n  setupInventory,\r\n  refreshSlots,\r\n} from \"../../store/inventory\";\r\nimport { useExitListener } from \"../../hooks/useExitListener\";\r\n\r\nconst Inventory: React.FC = () => {\r\n  const [inventoryVisible, setInventoryVisible] = React.useState(false);\r\n\r\n  useNuiEvent<boolean>(\"setInventoryVisible\", setInventoryVisible);\r\n  useNuiEvent<false>(\"closeInventory\", setInventoryVisible);\r\n  useExitListener(setInventoryVisible);\r\n\r\n  const leftInventory = useAppSelector(selectLeftInventory);\r\n  const rightInventory = useAppSelector(selectRightInventory);\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  useNuiEvent(\"setupInventory\", (data) => {\r\n    dispatch(setupInventory(data));\r\n    !inventoryVisible && setInventoryVisible(true);\r\n  });\r\n\r\n  useNuiEvent(\"refreshSlots\", (data) => dispatch(refreshSlots(data)));\r\n\r\n  return (\r\n    <Fade visible={inventoryVisible} className=\"center-wrapper\">\r\n      <InventoryGrid inventory={leftInventory} />\r\n      <InventoryControl />\r\n      <InventoryGrid inventory={rightInventory} />\r\n    </Fade>\r\n  );\r\n};\r\n\r\nexport default Inventory;\r\n","import React from \"react\";\r\nimport { useAppDispatch } from \"../store\";\r\nimport useNuiEvent from \"../hooks/useNuiEvent\";\r\nimport { setShiftPressed } from \"../store/inventory\";\r\nimport DragPreview from \"./utils/DragPreview\";\r\nimport Notifications from \"./utils/Notifications\";\r\nimport ProgressBar from \"./utils/ProgressBar\";\r\nimport useKeyPress from \"../hooks/useKeyPress\";\r\nimport { Items } from \"../store/items\";\r\nimport Inventory from \"./inventory\";\r\nimport { debugData } from \"../utils/debugData\";\r\n\r\ndebugData([\r\n  {\r\n    action: \"setupInventory\",\r\n    data: {\r\n      leftInventory: {\r\n        id: \"test\",\r\n        type: \"player\",\r\n        slots: 10,\r\n        maxWeight: 5000,\r\n        items: [],\r\n      },\r\n      rightInventory: {\r\n        id: \"shop\",\r\n        type: \"shop\",\r\n        slots: 10,\r\n        items: [{ slot: 1, name: \"water\",  weight: 500}],\r\n      },\r\n    },\r\n  },\r\n]);\r\n\r\nconst App: React.FC = () => {\r\n  useNuiEvent<typeof Items>(\"items\", (items) => {\r\n    for (const [name, data] of Object.entries(items)) {\r\n      Items[name] = data;\r\n    }\r\n  });\r\n\r\n  const shiftPressed = useKeyPress(\"Shift\");\r\n\r\n  const dispatch = useAppDispatch();\r\n\r\n  React.useEffect(() => {\r\n    dispatch(setShiftPressed(shiftPressed));\r\n  }, [shiftPressed, dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <DragPreview />\r\n      <Notifications />\r\n      <Inventory />\r\n      <ProgressBar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { TouchBackend } from \"react-dnd-touch-backend\";\r\nimport { store } from \"./store\";\r\nimport App from \"./components/App\";\r\nimport \"./index.scss\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <DndProvider backend={TouchBackend} options={{ enableMouseEvents: true }}>\r\n        <App />\r\n      </DndProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}